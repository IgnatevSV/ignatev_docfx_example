{
  "api/DialogueSystemScripts.Models.XML_DialoguesCollection.html": {
    "href": "api/DialogueSystemScripts.Models.XML_DialoguesCollection.html",
    "title": "Class XML_DialoguesCollection | DocFX research-training project.",
    "keywords": "Class XML_DialoguesCollection Класс, содержащий коллекцию настроек диалогов из XML. Inheritance System.Object XML_DialoguesCollection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :DialogueSystemScripts.Models Assembly :cs.temp.dll.dll Syntax public class XML_DialoguesCollection Properties Dialogues Коллекция настроек диалогов из XML. Declaration public List<XML_DialogueSettings> Dialogues { get; } Property Value Type Description List < XML_DialogueSettings >"
  },
  "api/DialogueSystemScripts.XML_DialoguesDatabase.html": {
    "href": "api/DialogueSystemScripts.XML_DialoguesDatabase.html",
    "title": "Class XML_DialoguesDatabase | DocFX research-training project.",
    "keywords": "Class XML_DialoguesDatabase Класс для работы с базой данных диалогов на XML. Inheritance System.Object DialoguesDatabase XML_DialoguesDatabase Namespace :DialogueSystemScripts Assembly :cs.temp.dll.dll Syntax public class XML_DialoguesDatabase : DialoguesDatabase Methods GetDialogueSettings(Int32) Метод для получения настроек диалога. Declaration public override DialogueSettings GetDialogueSettings(int dialogueID) Parameters Type Name Description System.Int32 dialogueID Идентификатор диалога. ID диалога в базе данных диалогов. Returns Type Description DialogueSettings Настройки диалогового окна. Overrides DialoguesDatabase.GetDialogueSettings(Int32) Examples Примеры использования: int dialogueSettingsID = 0; DialogueSettings primarySettings; DialogueSettings externalSettings = GetDialogueSettings(dialogueSettingsID); primarySettings.Text = externalSettings.Text;"
  },
  "api/DocFX_Example.DocFX_Example_Class.html": {
    "href": "api/DocFX_Example.DocFX_Example_Class.html",
    "title": "Class DocFX_Example_Class | DocFX research-training project.",
    "keywords": "Class DocFX_Example_Class Описание класса DocFX_Example_Class. Inheritance System.Object DocFX_Example_Class Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :DocFX_Example Assembly :cs.temp.dll.dll Syntax public class DocFX_Example_Class Fields protectedVar Описание protected переменной. Declaration protected bool protectedVar Field Value Type Description System.Boolean publicVar Описание public переменной. Declaration public bool publicVar Field Value Type Description System.Boolean Properties PropertyExample Описание свойства. Declaration public bool PropertyExample { get; } Property Value Type Description System.Boolean Methods ProtectedInternalMethod() Описание protected internal метода. Declaration protected virtual void ProtectedInternalMethod() ProtectedMethod() Описание protected метода. Declaration protected virtual void ProtectedMethod() publicMethod() Описание public метода. Declaration public virtual void publicMethod() SimpleExampleMethod(Boolean) Описание метода. Declaration public virtual bool SimpleExampleMethod(bool value) Parameters Type Name Description System.Boolean value Описание параметров. Returns Type Description System.Boolean Описание возвращаемых значений. Remarks Описание ремарки. Examples Пример кода с использование данного метода. Участок кода"
  },
  "api/Other.Editor.DefaultAssetBundlesCreator.html": {
    "href": "api/Other.Editor.DefaultAssetBundlesCreator.html",
    "title": "Class DefaultAssetBundlesCreator | DocFX research-training project.",
    "keywords": "Class DefaultAssetBundlesCreator Класс для создания AssetBundles Inheritance System.Object DefaultAssetBundlesCreator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :Other.Editor Assembly :cs.temp.dll.dll Syntax public class DefaultAssetBundlesCreator"
  },
  "api/Other.UsingExamples.OpenDialogueExample.html": {
    "href": "api/Other.UsingExamples.OpenDialogueExample.html",
    "title": "Class OpenDialogueExample | DocFX research-training project.",
    "keywords": "Class OpenDialogueExample Класс-пример открытия диалога в DialogueSystem. Inheritance System.Object OpenDialogueExample Namespace :Other.UsingExamples Assembly :cs.temp.dll.dll Syntax public class OpenDialogueExample : MonoBehaviour Methods OpenDialogue() Метод, открывающий новый диалог в DialogueSystem. Declaration public void OpenDialogue()"
  },
  "api/Other.html": {
    "href": "api/Other.html",
    "title": "Namespace Other | DocFX research-training project.",
    "keywords": "Namespace Other Classes CustomSceneManager Класс для управления сценами."
  },
  "api/DialogueSystemScripts.DialogueSystem.html": {
    "href": "api/DialogueSystemScripts.DialogueSystem.html",
    "title": "Class DialogueSystem | DocFX research-training project.",
    "keywords": "Class DialogueSystem Класс, управляющий диалоговыми окнами. Inheritance System.Object DialogueSystem Namespace :DialogueSystemScripts Assembly :cs.temp.dll.dll Syntax public class DialogueSystem : MonoBehaviour Methods CloseAllDialogues() Метод, закрывающий все текущие открытые окна диалогов. Declaration public void CloseAllDialogues() CloseCurrentDialogue() Метод, закрывающий текущее активное окно диалога. Declaration public void CloseCurrentDialogue() GetDialogueSettings(Int32) Метод для получения настроек диалога. Declaration public DialogueSettings GetDialogueSettings(int dialogueID) Parameters Type Name Description System.Int32 dialogueID Идентификатор диалога. ID диалога в базе данных диалогов. Returns Type Description DialogueSettings Настройки диалогового окна. Examples Примеры использования: _dialogueSystem.GetDialogueSettings(_dialogueID).Answers[_answerID].IsActive = true; OpenNewDialogue(Int32) Метод, открывающий новое окно диалога. Declaration public void OpenNewDialogue(int dialogueID) Parameters Type Name Description System.Int32 dialogueID Идентификатор диалога, который необходимо открыть. Remarks При открытии нового окна диалога предыдущее окно не закрывается!"
  },
  "api/DialogueSystemScripts.Models.Dialogue.DialogueDelegate.html": {
    "href": "api/DialogueSystemScripts.Models.Dialogue.DialogueDelegate.html",
    "title": "Delegate Dialogue.DialogueDelegate | DocFX research-training project.",
    "keywords": "Delegate Dialogue.DialogueDelegate Делегат диалога. Namespace :DialogueSystemScripts.Models Assembly :cs.temp.dll.dll Syntax public delegate void DialogueDelegate();"
  },
  "api/DialogueSystemScripts.Models.DialogueSettings.html": {
    "href": "api/DialogueSystemScripts.Models.DialogueSettings.html",
    "title": "Class DialogueSettings | DocFX research-training project.",
    "keywords": "Class DialogueSettings Класс настроек диалогового окна. Inheritance System.Object DialogueSettings Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :DialogueSystemScripts.Models Assembly :cs.temp.dll.dll Syntax [Serializable] public class DialogueSettings Constructors DialogueSettings(Int32, String) Конструктор класса DialogueSettings. Declaration public DialogueSettings(int id, string text) Parameters Type Name Description System.Int32 id Идентификатор диалога. ID диалога в базе данных диалогов. System.String text Текст диалога. DialogueSettings(Int32, String, Boolean, Dialogue, List<AnswerSettings>) Конструктор класса DialogueSettings. Declaration public DialogueSettings(int id, string text, bool hasExit, Dialogue dialogueLocalPrefab, List<AnswerSettings> playerAnswers) Parameters Type Name Description System.Int32 id Идентификатор диалога. ID диалога в базе данных диалогов. System.String text Текст диалога. System.Boolean hasExit Есть ли в окне диалога кнопка закрытия Close(x). Dialogue dialogueLocalPrefab Префаб диалогового окна типа \"Dialogue\". List < AnswerSettings > playerAnswers Возможные ответы в данном диалоге. Properties Answers Коллекция возможных ответов в данном диалоге. Declaration public List<AnswerSettings> Answers { get; } Property Value Type Description List < AnswerSettings > Коллекция возможных ответов в данном диалоге. DialoguePrefab Префаб диалогового окна. Declaration public Dialogue DialoguePrefab { get; } Property Value Type Description Dialogue Диалоговое окно. HasExit Есть ли в окне диалога кнопка закрытия Close(x). Declaration public bool HasExit { get; } Property Value Type Description System.Boolean Есть ли в окне диалога кнопка закрытия. ID Идентификатор диалога. ID диалога в базе данных диалогов. Declaration public int ID { get; } Property Value Type Description System.Int32 Идентификатор диалога. Text Текст диалога. Declaration public string Text { get; set; } Property Value Type Description System.String Текст диалога."
  },
  "api/DialogueSystemScripts.Models.XML_DialogueSettings.html": {
    "href": "api/DialogueSystemScripts.Models.XML_DialogueSettings.html",
    "title": "Class XML_DialogueSettings | DocFX research-training project.",
    "keywords": "Class XML_DialogueSettings Класс настроек диалога из XML. Inheritance System.Object XML_DialogueSettings Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :DialogueSystemScripts.Models Assembly :cs.temp.dll.dll Syntax [Serializable] public class XML_DialogueSettings Properties Answers Коллекция настроек ответов. Declaration public List<XML_AnswerSettings> Answers { get; } Property Value Type Description List < XML_AnswerSettings > ID Идентификатор диалога. ID диалога в базе данных диалогов. Declaration public int ID { get; } Property Value Type Description System.Int32 Text Текст диалога. Declaration public string Text { get; } Property Value Type Description System.String"
  },
  "api/DialogueSystemScripts.html": {
    "href": "api/DialogueSystemScripts.html",
    "title": "Namespace DialogueSystemScripts | DocFX research-training project.",
    "keywords": "Namespace DialogueSystemScripts Classes DialoguesDatabase Абстрактный класс для работы с базой данных диалогов. DialogueSystem Класс, управляющий диалоговыми окнами. XML_DialoguesDatabase Класс для работы с базой данных диалогов на XML."
  },
  "api/Other.CustomSceneManager.html": {
    "href": "api/Other.CustomSceneManager.html",
    "title": "Class CustomSceneManager | DocFX research-training project.",
    "keywords": "Class CustomSceneManager Класс для управления сценами. Inheritance System.Object CustomSceneManager Namespace :Other Assembly :cs.temp.dll.dll Syntax public class CustomSceneManager : MonoBehaviour Methods LoadAssetBundlesExampleScene() Declaration public void LoadAssetBundlesExampleScene() LoadBaseScene() Declaration public void LoadBaseScene() LoadCustomDialogueExampleScene() Declaration public void LoadCustomDialogueExampleScene() ReloadCurrentScene() Declaration public void ReloadCurrentScene()"
  },
  "api/Other.Editor.html": {
    "href": "api/Other.Editor.html",
    "title": "Namespace Other.Editor | DocFX research-training project.",
    "keywords": "Namespace Other.Editor Classes DefaultAssetBundlesCreator Класс для создания AssetBundles DefaultAssetBundlesLoader Класс для выгрузки ассетов из AssetBundles."
  },
  "api/Other.UsingExamples.html": {
    "href": "api/Other.UsingExamples.html",
    "title": "Namespace Other.UsingExamples | DocFX research-training project.",
    "keywords": "Namespace Other.UsingExamples Classes OpenDialogueExample Класс-пример открытия диалога в DialogueSystem. UnlockAnswerExample Класс-пример разблокировки закрытых(неактивных) вариантов ответа в системе диалогов."
  },
  "articles/docfx_json.html": {
    "href": "articles/docfx_json.html",
    "title": "docfx.json | DocFX research-training project.",
    "keywords": "docfx.json Warning Это краткая переведенная версия страницы DocFX User Manual Структура docfx.json представляет собой пару ключ-значение. Свойства для metadata Свойство Описание src Определяет исходные проекты, для которых необходимо сгенерировать metadata файлы. dest Определяет папки для вывода сгенерированных metadata файлов. shouldSkipMarkup Bool значение для отключения рендеринга triple-slash-комментариев в исходном коде как markdown. filter Определяет фильтр для конфигурационных файлов. Примеры: { \"metadata\": [ { \"src\": [ { \"files\": [\"**/*.csproj\"], \"exclude\": [ \"**/bin/**\", \"**/obj/**\" ], \"src\": \"../src\" } ], \"dest\": \"obj/docfx/api/dotnet\", \"shouldSkipMarkup\": true }, { \"src\": [ { \"files\": [\"**/*.js\"], \"src\": \"../src\" } ], \"dest\": \"obj/docfx/api/js\", \"useCompatibilityFileName\": true } ] } Свойства для build Свойство Описание content Содержит все файлы, которые необходимы для генерации документации. resource Содержит все ресурсные файлы, такие как, например, изображения. overwrite Содержит все файлы, которые предназначены для перезаписи существующих файлов yml . globalMetadata Содержит метаданные, которые будут применены к каждому файлу в формате ключ-значение. fileMetadata Содержит метаданные, которые будут применены к определенным файлам. globalMetadataFiles Определяет список файлов JSON которые содержат настройки globalMetadata. fileMetadataFiles Определяет список файлов JSON которые содержат настройки fileMetadata. template Шаблон, который будет применен к каждому файлу в документации. theme Тема, которая будет применена к документации. Тема используется для изменения стиля, сгенерированного шаблоном. xref Определяет ссылки xrefmap, которые используются для файлов content . На данный момент подерживает следующие форматы: http, https, ftp, file. Примеры template : { \"build\" : { ... \"template\": \"custom\", ... } ... } { \"build\" : { ... \"template\": [\"default\", \"X:/template/custom\"], ... } ... } Примеры: { \"build\": { \"content\": [ { \"files\": [\"**/*.yml\"], \"src\": \"obj/docfx\" }, { \"files\": [\"tutorial/**/*.md\", \"spec/**/*.md\", \"spec/**/toc.yml\"] }, { \"files\": [\"toc.yml\"] } ], \"resource\": [ { \"files\": [\"spec/images/**\"] } ], \"overwrite\": \"apispec/*.md\", \"externalReference\": [ ], \"globalMetadata\": { \"_appTitle\": \"DocFX website\" }, \"dest\": \"_site\", \"template\": \"default\" } } Зарезервированные имена метаданных Metadata Name Type Description _appTitle string Текст заголовка каждой страницы. _appFooter string Текст нижнего колонтикула. _appLogoPath string Путь к изображению логотипа каждой страницы. _appFaviconPath string Путь к изображению иконки каждой страницы.. _enableSearch bool Включает поиск по всему вебсайту. _enableNewTab bool Открывает ли новую вкладку по переходу по ссылке. _disableNavbar bool Отключает navbar вверху страницы. _disableBreadcrumb bool Отключает breadcrumb вверху странцы. _disableToc bool Отключает table of contents слева на странице. _disableAffix bool Отключает affix bar справа на странице. _disableContribution bool Отключает кнопки View Source и Improve this Doc справа на странице. _gitContribute object Настройка кнопки Improve this Doc . В repo указывается ссылка на репозиторий. В branch указывается ветка(branch) репозитория. В path указывается путь для перезаписи файлов. _gitUrlPattern string Шаблон ссылки на репозиторий для генерации ссылок на кнопка View Source и Improve this Doc . На текущий момент поддерживает github и vso currently. Если не указано, то DocFX попытается использовать шаблон из имени домена ссылки на git. Cпособs установки метаданных для файлов: global metadata устанавливает метаданные для каждого файла. file metadata устанавливает метаданные для файлов, которые совпадают по заданному шаблону. YAML header устанавливает метаданные для заданного файла. Примеры: Пример globalMetadata { \"_appTitle\": \"DocFX website\", \"_enableSearch\": \"true\" } Пример fileMetadata { \"priority\": { \"**.md\": 2.5, \"spec/**.md\": 3 }, \"keywords\": { \"obj/docfx/**\": [\"API\", \"Reference\"], \"spec/**.md\": [\"Spec\", \"Conceptual\"] } } Пример использования globalMetadataFiles в docfx.json ... \"globalMetadataFiles\": [\"global1.json\", \"global2.json\"], ... Пример использования --globalMetadataFiles при создании билда через коммандную строку docfx build --globalMetadataFiles global1.json,global2.json Пример использования fileMetadataFiles в docfx.json ... \"fileMetadataFiles\": [\"file1.json\", \"file2.json\"], ... Пример использования --fileMetadataFiles при создании билда через коммандную строку docfx build --fileMetadataFiles file1.json,file2.json Приоритет global metadata: global metadata из файла docfx config global metadata из global metadata global metadata из командной строки Приоритет file metadata: file metadata из файла docfx config file metadata из файла file metadata Формат File Mapping Property Name Description files REQUIRED . Файл или массив файлов. Поддерживается шаблон glob . exclude Файл или массив файлов, которые должны быть исключены. Поддерживается шаблон glob . src Каталог источника. dest Каталог для сгенерированных файлов. version Версия текущего файла. caseSensitive TOBEIMPLEMENTED . Чувствительность к регистру шаблона glob . Значение по умолчанию - false . supportBackslash TOBEIMPLEMENTED . Если значение - true , то символ \\ будет использоваться как разделитель пути файлов. Значение по умолчанию - false . escape TOBEIMPLEMENTED . Если значение - true , то символ \\ будет использоваться как escape-символ, т.е. \\{\\}.txt будет равносильно {}.txt . Значение по умолчанию - false . Пример: \"key\": [ {\"files\": [\"file1\", \"file2\"], \"dest\": \"dest1\"}, {\"files\": \"file3\", \"dest\": \"dest2\"}, {\"files\": [\"file4\", \"file5\"], \"exclude\": [\"file5\"], \"src\": \"folder1\"}, {\"files\": \"Example.yml\", \"src\": \"v1.0\", \"dest\":\"v1.0/api\", \"version\": \"v1.0\"}, {\"files\": \"Example.yml\", \"src\": \"v2.0\", \"dest\":\"v2.0/api\", \"version\": \"v2.0\"} ] Шаблон Glob DocFX использует Glob для поддержки шаблона glob в пути к файлам. * соответствует любому числу символов кроме / ? соответствует одному символу кроме / ** соответствует любому числу символов включая / , но только для одного объекта указанного в пути {} разрешает разделенный запятыми список выражений OR"
  },
  "articles/html_files_gen.html": {
    "href": "articles/html_files_gen.html",
    "title": "Site | DocFX research-training project.",
    "keywords": "Site HTML страницы генерируются в папке \"_site\" или в любой другой папке указанной в docfx.json -> \"build\" -> \"dest\". Note Иногда возникает необходимость удалить файлы в папке(например, при некорректном отображении вебсайта)."
  },
  "articles/quickstart.html": {
    "href": "articles/quickstart.html",
    "title": "Quickstart | DocFX research-training project.",
    "keywords": "Quickstart Warning Это краткая переведенная версия страницы DocFX Quickstart Использование через командную строку Note Перед тем как использовать DocFX убедитесь, что установлен Visual Studio 2015 или же Microsoft Build Tools 2015 . Step1. Скачать и распаковать docfx.zip из https://github.com/dotnet/docfx/releases Step2. Инициализировать шаблон через командную строку: docfx init Или: docfx init -q Для создания шаблона по умолчанию. Данная команда сгенерирует шаблон docfx_project в папке с DocFX. Step3. Создание билда и запуск сайта Создание билда: docfx docfx_project\\docfx.json Запуск: docfx serve docfx_project\\_site Или же: docfx docfx_project\\docfx.json --serve Для создания билда и немедленного запуска."
  },
  "dialogues_system_description/scenes.html": {
    "href": "dialogues_system_description/scenes.html",
    "title": "Scenes | DocFX research-training project.",
    "keywords": "Scenes BaseScene Пример №1. Сцена имеет пример системы диалогов с префабами диалогов и ответов по умолчанию. CustomDialogueExampleScene Пример №2. Сцена имеет пример системы диалогов с измененными префабами диалогов и ответов, а также с измененной локалью. AssetBundlesExampleScene Пример Asset Bundles. Пример использования системы диалогов с загрузкой их через asset bundles. Warning В данной сцене не забудьте изменить строку \"Bundle URL\" в объекте \"BundleLoader\"."
  },
  "articles/issues.html": {
    "href": "articles/issues.html",
    "title": "Issues | DocFX research-training project.",
    "keywords": "Issues На 32-битных системах Windows создание билда работает некорректно. Для создания билда небходимо наличие Visual Studio 2015 или Microsoft Build Tools 2015. На примере с Visual Studio Community 2017 работает некорректно. В проекте обязательно должно быть указано пространство имен(namespace)."
  },
  "articles/md_files_gen.html": {
    "href": "articles/md_files_gen.html",
    "title": "API | DocFX research-training project.",
    "keywords": "API Markdown файлы по исходному коду генерируются в папке api или в любой другой папке указанной в docfx.json -> \"metadata\" -> \"dest\". Warning При изменении папки api на другую или изменении имени, также необходимо скорректировать путь до файлов в docfx.json -> \"build\" -> \"content\" -> \"files\". Source Источник исходных файлов указывается в docfx.json -> \"metadata\" -> \"src\" -> \"files\". Также могут быть указаны исключения исходных файлов в docfx.json -> \"metadata\" -> \"src\" -> \"exclude\"."
  },
  "dialogues_system_description/dialogue_system.html": {
    "href": "dialogues_system_description/dialogue_system.html",
    "title": "Dialogue System | DocFX research-training project.",
    "keywords": "Dialogue System Основное DialogueSystem Диалог создается через DialogueSystem, метод OpenNewDialogue(int dialogueID). Warning При создании нового диалога - предыдущий диалог не закрывается, а становится неактивным. Для того, что бы закрыть текущий диалог используется метод CloseCurrentDialogue(), в классе DialogueSystem. Также возможно закрыть все текущие открытые диалоги(в т.ч. неактивные). Для этого используется метод CloseAllDialogues(), в классе DialogueSystem. Hierarchy Data Input Type Тип выбора данных(текстов) для диалогов: Direct - выборка данных из \"Dialogues Settings\". External - выборка данных из объекта Database. Database Объект типа \"Database\", из которого идет выборка данных для диалогов. Note При использовании ввода данных через XML-файл необходимо указывать корректные значения \"Size\" массива \"AnswerSettings\". XML-файл данных используется только для изменения значений \"Text\" в DialogueSettings и AnswerSettings. XML Dialogues Database XML_DialoguesDatabase Main Canvas Group Объект типа \"Canvas Group\". Необходим для блокирования управления вне диалогового окна. Dialogue Spawn Point Объект типа \"RectTransform\". Необходим для указания объкта, в котором будет происходить создание диалогового окна. Если не задан, то по умолчанию устанавливается объект \"Main Canvas Group\". Dialogue Main Prefab Префаб диалогового окна типа \"Dialogue\". Dialogue Window Prefab Dialogue Answer Main Prefab Префаб кнопки ответа окна типа \"Answer\". Answer Prefab AnswerSettings Answer Dialogues Settings Массив объектов типа \"DialogueSettings\". Size - размер массива, количество диалогов. DialogueSettings Note При использовании ввода данных через XML-файл необходимо указывать корректные значения \"Size\" массива \"AnswerSettings\". XML-файл данных используется только для изменения значений \"Text\" в DialogueSettings и AnswerSettings. Dialogue Position Offset Значения, на которые будет сдвинуто текущее диалоговое окно при открытии нового диалогового окна. Dialogue Rotation Offset Значения, на которые будет повернуто текущее диалоговое окно при открытии нового диалогового окна."
  },
  "dialogues_system_description/dialogue_window_prefab.html": {
    "href": "dialogues_system_description/dialogue_window_prefab.html",
    "title": "Dialogue Window Prefab | DocFX research-training project.",
    "keywords": "Dialogue Window Prefab Основное Dialogue Префаб окна диалога. Может быть настроен дизайнером, однако должен иметь объекты и компоненты, перечисленные в пункте \"Dialogue Settings\". Main Window Объект главного окна диалога, с которым будут производиться операции во время работы с диалогами(например, удаление или перемещение окна). Close Window Button Кнопка закрытия окна диалога. Fader Объект типа \"Image\", который будет активирован для затемнения окна диалога, если оно не активно. Данный объект указывается по усмотрению дизайнера. Dialogue Text Объект типа \"Text\" для вывода текста диалога. Answers Group Объект типа \"Vertical Layout Group\" в котором будут создаваться кнопки ответов. Canvas Group Объект типа \"Canvas Group\", который должен быть создан дизайнером как компонент в объекте главного окна диалога(Main Window). Используется для блокировки управления в Canvas, в случае если диалоговоеокно неактивно."
  },
  "dialogues_system_description/xml_dialogues_db.html": {
    "href": "dialogues_system_description/xml_dialogues_db.html",
    "title": "XML Dialogues Database | DocFX research-training project.",
    "keywords": "XML Dialogues Database Основное XML_DialoguesDatabase Note При использовании ввода данных через XML-файл необходимо указывать корректные значения \"Size\" массива \"AnswerSettings\". XML-файл данных используется только для изменения значений \"Text\" в DialogueSettings и AnswerSettings. XML File Файл диалогов и ответов, который будет использоваться при выбранном типе ввода данных \"External\". Файл может быть переключен в редакторе, может быть редактирован сторонними средставами."
  },
  "index.html": {
    "href": "index.html",
    "title": "DocFX research-training project. | DocFX research-training project.",
    "keywords": "DocFX research-training project. Это тренировочный проект с использованием инструмента DocFX."
  },
  "articles/toc_files.html": {
    "href": "articles/toc_files.html",
    "title": "Файлы Table-Of-Content (TOC). | DocFX research-training project.",
    "keywords": "Файлы Table-Of-Content ( TOC ). Основное Файлы TOC должны именоваться как toc.md или toc.yml . Note В оф.документации указано, что имя файла toc.md или toc.yml не чувствителен к регистру. Однако по факту имя файла toc.md или toc.yml должно быть в нижнем регистре , иначе может вызывать баги. Примеры Пример toc.md : # [Header1](href) ## [Header1.1](href) # Header2 ## [Header2.1](href) ### [Header2.1.1](href) ## [Header2.2](href) # @UidForAnArticle Пример toc.yml : - name: Topic1 href: Topic1.md - name: Topic2 href: Topic2.md items: - name: Topic2_1 href: Topic2_1.md Caution Имена свойств в toc.yml чувствительны к регистру!"
  },
  "dialogues_system_description/answer_prefab.html": {
    "href": "dialogues_system_description/answer_prefab.html",
    "title": "Answer Prefab | DocFX research-training project.",
    "keywords": "Answer Prefab Основное Answer AnswerSettings Префаб кнопки ответа, который может быть настроен дизайнером, однако должен иметь компонент \"Layout Element\" для корректного отображения в окне диалога. Answer Button Объект типа \"Button\", кнопка ответа в диалоге. Text Объект типа \"Text\" для вывода текста ответа."
  },
  "api/DialogueSystemScripts.Models.Answer.html": {
    "href": "api/DialogueSystemScripts.Models.Answer.html",
    "title": "Class Answer | DocFX research-training project.",
    "keywords": "Class Answer Класс ответа в диалоговом окне. Inheritance System.Object Answer Namespace :DialogueSystemScripts.Models Assembly :cs.temp.dll.dll Syntax public class Answer : MonoBehaviour Properties IsAnswerActive Активен ли ответ на данный момент. Declaration public bool IsAnswerActive { get; set; } Property Value Type Description System.Boolean Активен ли ответ на данный момент. Methods InitAnswer(AnswerSettings) Инициализация ответа, применение заданных настроек. Declaration public void InitAnswer(AnswerSettings settings) Parameters Type Name Description AnswerSettings settings Настройки ответа."
  },
  "api/DialogueSystemScripts.Models.Dialogue.html": {
    "href": "api/DialogueSystemScripts.Models.Dialogue.html",
    "title": "Class Dialogue | DocFX research-training project.",
    "keywords": "Class Dialogue Класс диалогового окна. Inheritance System.Object Dialogue Namespace :DialogueSystemScripts.Models Assembly :cs.temp.dll.dll Syntax public class Dialogue : MonoBehaviour Properties AnswersGroup Объект группы в которой будут создаваться кнопки ответов. Declaration public VerticalLayoutGroup AnswersGroup { get; } Property Value Type Description VerticalLayoutGroup Объект группы в которой будут создаваться кнопки ответов. IsDialogueActive Активно ли окно диалога в данный момент. Declaration public bool IsDialogueActive { get; set; } Property Value Type Description System.Boolean Активно ли окно диалога в данный момент. MainWindow Объект главного окна диалога, с которым будут производиться операции во время работы с диалогами(например, удаление или перемещение окна). Declaration public GameObject MainWindow { get; } Property Value Type Description GameObject Объект главного окна диалога. Examples _mainWindow.transform.localPosition = _defaultPosition; _mainWindow.transform.localEulerAngles = _defaultRotation; Methods InitDialogue(DialogueSettings) Инициализация окна диалога, применение заданных настроек. Declaration public void InitDialogue(DialogueSettings settings) Parameters Type Name Description DialogueSettings settings Настройки диалогового окна. ResetTransformValues() Сброс значений текущей позиции и вращения диалогового окна к заданным значениям по умолчанию. Declaration public void ResetTransformValues() Events OnDialogueClose Событие для закрытия диалога из под системы диалогов. Declaration public static event Dialogue.DialogueDelegate OnDialogueClose Event Type Type Description Dialogue.DialogueDelegate"
  },
  "api/DialogueSystemScripts.Models.AnswerSettings.html": {
    "href": "api/DialogueSystemScripts.Models.AnswerSettings.html",
    "title": "Class AnswerSettings | DocFX research-training project.",
    "keywords": "Class AnswerSettings Класс настроек ответа. Inheritance System.Object AnswerSettings Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :DialogueSystemScripts.Models Assembly :cs.temp.dll.dll Syntax [Serializable] public class AnswerSettings Constructors AnswerSettings(String) Конструктор класса AnswerSettings. Declaration public AnswerSettings(string text) Parameters Type Name Description System.String text Текст ответа. AnswerSettings(String, Boolean, Answer, Button.ButtonClickedEvent) Конструктор класса AnswerSettings. Declaration public AnswerSettings(string text, bool isActive, Answer answerPrefab, Button.ButtonClickedEvent customEvents) Parameters Type Name Description System.String text Текст ответа. System.Boolean isActive Активен ли ответ в начальном состоянии. Answer answerPrefab Префаб диалогового окна класса \"Answer\". Button.ButtonClickedEvent customEvents Дополнительные события, вызываемые по выбору ответа. Properties AnswerPrefab Префаб ответа. Declaration public Answer AnswerPrefab { get; } Property Value Type Description Answer Ответ в диалоговом окне. CustomEvents Дополнительные события, вызываемые по выбору ответа. Declaration public Button.ButtonClickedEvent CustomEvents { get; } Property Value Type Description Button.ButtonClickedEvent Дополнительные события, вызываемые по выбору ответа. IsActive Активен ли ответ в начальный момент. Declaration public bool IsActive { get; set; } Property Value Type Description System.Boolean Активен ли ответ в начальный момент. Text Текст ответа. Declaration public string Text { get; set; } Property Value Type Description System.String Текст ответа."
  },
  "api/DialogueSystemScripts.Models.XML_AnswerSettings.html": {
    "href": "api/DialogueSystemScripts.Models.XML_AnswerSettings.html",
    "title": "Class XML_AnswerSettings | DocFX research-training project.",
    "keywords": "Class XML_AnswerSettings Класс настроек ответа из XML. Inheritance System.Object XML_AnswerSettings Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :DialogueSystemScripts.Models Assembly :cs.temp.dll.dll Syntax [Serializable] public class XML_AnswerSettings Properties Text Текст диалога. Declaration public string Text { get; } Property Value Type Description System.String"
  },
  "api/DialogueSystemScripts.Models.html": {
    "href": "api/DialogueSystemScripts.Models.html",
    "title": "Namespace DialogueSystemScripts.Models | DocFX research-training project.",
    "keywords": "Namespace DialogueSystemScripts.Models Classes Answer Класс ответа в диалоговом окне. AnswerSettings Класс настроек ответа. Dialogue Класс диалогового окна. DialogueSettings Класс настроек диалогового окна. XML_AnswerSettings Класс настроек ответа из XML. XML_DialoguesCollection Класс, содержащий коллекцию настроек диалогов из XML. XML_DialogueSettings Класс настроек диалога из XML. Delegates Dialogue.DialogueDelegate Делегат диалога."
  },
  "api/DocFX_Example.html": {
    "href": "api/DocFX_Example.html",
    "title": "Namespace DocFX_Example | DocFX research-training project.",
    "keywords": "Namespace DocFX_Example Classes DocFX_Example_Class Описание класса DocFX_Example_Class."
  },
  "api/Other.Editor.DefaultAssetBundlesLoader.html": {
    "href": "api/Other.Editor.DefaultAssetBundlesLoader.html",
    "title": "Class DefaultAssetBundlesLoader | DocFX research-training project.",
    "keywords": "Class DefaultAssetBundlesLoader Класс для выгрузки ассетов из AssetBundles. Inheritance System.Object DefaultAssetBundlesLoader Namespace :Other.Editor Assembly :cs.temp.dll.dll Syntax public class DefaultAssetBundlesLoader : MonoBehaviour"
  },
  "api/Other.UsingExamples.UnlockAnswerExample.html": {
    "href": "api/Other.UsingExamples.UnlockAnswerExample.html",
    "title": "Class UnlockAnswerExample | DocFX research-training project.",
    "keywords": "Class UnlockAnswerExample Класс-пример разблокировки закрытых(неактивных) вариантов ответа в системе диалогов. Inheritance System.Object UnlockAnswerExample Namespace :Other.UsingExamples Assembly :cs.temp.dll.dll Syntax public class UnlockAnswerExample : MonoBehaviour Methods UnlockAnswer() Метод, разблокирующий закрытый(неактивный) вариант ответа в системе диалогов. Declaration public void UnlockAnswer()"
  },
  "api/DialogueSystemScripts.DialoguesDatabase.html": {
    "href": "api/DialogueSystemScripts.DialoguesDatabase.html",
    "title": "Class DialoguesDatabase | DocFX research-training project.",
    "keywords": "Class DialoguesDatabase Абстрактный класс для работы с базой данных диалогов. Inheritance System.Object DialoguesDatabase XML_DialoguesDatabase Namespace :DialogueSystemScripts Assembly :cs.temp.dll.dll Syntax public abstract class DialoguesDatabase : MonoBehaviour Methods GetDialogueSettings(Int32) Абстрактный метод для получения настроек диалогового окна из базы данных по идентификатору диалога. Declaration public abstract DialogueSettings GetDialogueSettings(int dialogueID) Parameters Type Name Description System.Int32 dialogueID Идентификатор диалога. ID диалога в базе данных диалогов. Returns Type Description DialogueSettings Настройки диалогового окна."
  }
}